# simple snippets for commonly used math symbols all on the homerow.

global !p
def inside_mathjax_delimiters():
	"""
	description:
		determines if the current cursor position in vim, is within the ascii math delimiters

	author:
		cuppajoeman (2023)
	"""
	mathjax_delimiters_delimiter = r"`"

	row, column = vim.current.window.cursor

	current_line_text = vim.current.line
	current_line_text_up_until_cursor = current_line_text[0:column - 1]

	count = 0

	for i in range(len(current_line_text_up_until_cursor) - 2):
		substr = current_line_text_up_until_cursor[i: i+2]
		if substr == "/(":
			count += 1
		elif substr == "/)":
			count -= 1
		
	inside_mathjax_delimiter = count == 1
	
	#inside_mathjax_delimiters_delimiter = (current_line_text_up_until_cursor.count(mathjax_delimiters_delimiter) % 2) == 1

	return inside_mathjax_delimiter
endglobal

snippet test 
`!p snip.rv = inside_mathjax_delimiters()`
endsnippet

snippet mm "enter mathjax mode" i
/( $1 /) $0
endsnippet

# The following snippets are designed so that writing ascii math 
# only requires you to mostly stay on the homerow instead of breaking your pinky

context "inside_mathjax_delimiters()"
snippet jj "parenthesis" iA
/left( $1 /right)$0
endsnippet

context "inside_mathjax_delimiters()"
snippet kk "parenthesis" iA
{$1}$0
endsnippet

context "inside_mathjax_delimiters()"
snippet ll "parenthesis" iA
[$1]$0
endsnippet

context "inside_mathjax_delimiters()"
snippet aa "addition" iA
+
endsnippet

context "inside_mathjax_delimiters()"
snippet ss "subtraction" iA
-
endsnippet

context "inside_mathjax_delimiters()"
snippet dd "multiplication" iA
*
endsnippet

context "inside_mathjax_delimiters()"
snippet ff "division" iA
/
endsnippet

context "inside_mathjax_delimiters()"
snippet gg "exponent" iA
^
endsnippet

context "inside_mathjax_delimiters()"
snippet hh "subscript" iA
_
endsnippet

context "inside_mathjax_delimiters()"
snippet hg "subscript superscript" iA
_$1^$2
endsnippet

context "inside_mathjax_delimiters()"
snippet ee "equality" iA
=
endsnippet

context "inside_mathjax_delimiters()"
snippet tt "text mode" iA
text
endsnippet

# asciimath notation

context "inside_mathjax_delimiters()"
snippet * "TODO" iA
\cdot
endsnippet

context "inside_mathjax_delimiters()"
snippet *** "TODO" iA
\star
endsnippet

context "inside_mathjax_delimiters()"
snippet \\ "TODO" iA
\setminus
endsnippet

context "inside_mathjax_delimiters()"
snippet xx "TODO" iA
\times
endsnippet

context "inside_mathjax_delimiters()"
snippet @ "TODO" iA
\circ
endsnippet

context "inside_mathjax_delimiters()"
snippet o+ "TODO" iA
\oplus
endsnippet

context "inside_mathjax_delimiters()"
snippet sum "TODO" iA
\sum
endsnippet

context "inside_mathjax_delimiters()"
snippet prod "TODO" iA
\prod
endsnippet

context "inside_mathjax_delimiters()"
snippet ^^ "TODO" iA
\land
endsnippet

context "inside_mathjax_delimiters()"
snippet vv "TODO" iA
\lor
endsnippet

context "inside_mathjax_delimiters()"
snippet nn "TODO" iA
\cap
endsnippet

context "inside_mathjax_delimiters()"
snippet nnn "TODO" iA
\bigcap
endsnippet

context "inside_mathjax_delimiters()"
snippet uu "TODO" iA
\cup
endsnippet

context "inside_mathjax_delimiters()"
snippet uuu "TODO" iA
\bigcup
endsnippet

context "inside_mathjax_delimiters()"
snippet / "TODO" iA
\frac{}{}
endsnippet

context "inside_mathjax_delimiters()"
snippet ... "TODO" iA
\ldots
endsnippet

context "inside_mathjax_delimiters()"
snippet mbb "TODO" iA
\mathbb
endsnippet

context "inside_mathjax_delimiters()"
snippet ne "TODO" iA
\neq
endsnippet

context "inside_mathjax_delimiters()"
snippet lt "TODO" iA
\lt
endsnippet

context "inside_mathjax_delimiters()"
snippet le "TODO" iA
\le
endsnippet

context "inside_mathjax_delimiters()"
snippet gt "TODO" iA
\gt
endsnippet

context "inside_mathjax_delimiters()"
snippet ge "TODO" iA
\ge
endsnippet

context "inside_mathjax_delimiters()"
snippet in "TODO" iA
\in
endsnippet

context "inside_mathjax_delimiters()"
snippet notin "TODO" iA
\notin
endsnippet

context "inside_mathjax_delimiters()"
snippet sube "TODO" i
\subseteq
endsnippet

context "inside_mathjax_delimiters()"
snippet supe "TODO" iA
\supseteq
endsnippet

context "inside_mathjax_delimiters()"
snippet eq "TODO" iA
\equiv
endsnippet

context "inside_mathjax_delimiters()"
snippet EE "TODO" iA
\exists
endsnippet

context "inside_mathjax_delimiters()"
snippet AA "TODO" iA
\forall
endsnippet

context "inside_mathjax_delimiters()"
snippet bar "TODO" iA
\bar
endsnippet


# HTML

snippet el "html element"
<$1>$2</$1>
endsnippet

snippet ul "unordered list" 
<ul>
	<li>$1</li>
</ul>
endsnippet

snippet p "paragraph"
<p>
	$1
</p>
endsnippet

snippet def "definition"
<div class="definition" id="definition-${2:TODO}">
	<div class="title">${1:TODO}</div>
	<div class="content">
		$3
	</div>
</div>
$0
endsnippet

snippet swp "template for statement with proof" 
<div class="$1" id="${1:statement type}-${3:TODO}">
	<div class="title">$2</div>
	<div class="content">
		$4
	</div>
	<div class="proof">
		${5:TODO}
	</div>
</div>
$0
endsnippet


snippet k-l "knowledge link"
<a class="knowledge-link" data-href="$1">$2</a>
endsnippet

snippet c-c "centered-content"
<div class="centered-content">
	$1
</div>
endsnippet

snippet align "html version of align env"
<table class="align">
	$1
</table>
endsnippet

snippet tr "table row"
<tr>
	<td>$1</td>
</tr>
endsnippet
